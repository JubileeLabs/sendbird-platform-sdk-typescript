/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ScheduleAnnouncementData {
    /**
    * The [message](/docs/chat/v3/platform-api/guides/messages#-3-resource-representation) of a new announcement.
    */
    'message': string;
    /**
    * Specifies the type of the message, which can be either MESG for a text message and ADMM for an admin message.
    */
    'messageType': string;
    /**
    * Specifies the unique ID of the sender when the message.type is MESG. When the message.type value is ADMM, this property is not effective.
    */
    'messageUserId': string;
    /**
    * Specifies the content of the message.
    */
    'messageContent': string;
    /**
    * Specifies the target channels to send the announcement to. Acceptable values are the following: <br/> - sender_all_channels (Default): sends the announcement to all of the sender's group channels.<br />- target_channels: sends the announcement to all target group channels. When the `message.type` of the announcement is ADMM, this is the only valid option. <br /> - target_users_included_channels: sends the announcement to group channels consisting of the sender, target users, and other members. <br/> - target_users_only_channels: sends the announcement to group channels consisting of the sender and target users only.
    */
    'targetAt': string;
    /**
    * Specifies an array of one or more target user IDs or target channel URLs to send the announcement to when the target_at is  target_channels, target_users_only_channels, or target_users_included_channels.<br /><br />  When the target_at value is sender_all_channels, this property is not effective.
    */
    'targetList': Array<string>;
    /**
    * Determines which type of group channel to send the announcement to, based on the target_at and target_list. This property is effective only when the target_at is either target_users_only_channels or target_users_included_channels and the target_list is specified. Acceptable values are limited to the following:<br/>- all: send the announcement to all channels that have all target users and the sender in them, regardless of channel type.<br/>- distinct (default): sends this announcement to the distinct channels. Distinct channels continue to use the same existing channels whenever someone attempts to create a new channel with the same members.<br/>- non-distinct: sends this announcement to the non-distinct channels. Non-distinct channels always create a new channel even if there is an existing channel with the same members.<br/><br/> The distinct and non-distinct channels are a subtype of group channels, determined by the [is_distinct](/docs/chat/v3/platform-api/guides/group-channel#2-types-of-a-channel-3-resource-representation) property.
    */
    'targetChannelType': string;
    /**
    * Specifies the unique ID of the new announcement. The unique_id will be automatically created unless specified.
    */
    'uniqueId'?: string;
    /**
    * Specifies the custom message type of the message of the new announcement.
    */
    'messageCustomType'?: string;
    /**
    * Specifies additional message information such as custom font size, font type or `JSON` formatted string.
    */
    'messageData'?: string;
    /**
    * Determines whether to create a new channel if there is no existing channel that matches with the target options including target_at and target_list. By specifying the create_channel_options, you can configure the properties of newly created channels. (Default: false)
    */
    'createChannel'?: boolean;
    /**
    * Specifies the announcement group that the new announcement belongs to.<br/> <br/> This property is effective only when the target_at is either target_users_only_channels or target_users_included_channels.
    */
    'announcementGroup'?: string;
    /**
    * A newly created channel configuration.
    */
    'createChannelOptions'?: string;
    /**
    * Specifies the name of channels to be created. (Default: Group Channel)
    */
    'createChannelOptionsName'?: string;
    /**
    * Specifies the URL of the cover image for the new channels.
    */
    'createChannelOptionsCoverUrl'?: string;
    /**
    * Specifies the custom channel type of the new channels.
    */
    'createChannelOptionsCustomType'?: string;
    /**
    * Specifies additional channel information such as a long description of the channel or `JSON` formatted string.
    */
    'createChannelOptionsData'?: string;
    /**
    * Determines whether to create a [distinct](/docs/chat/v3/platform-api/guides/channel-types#2-group-channel) channel. (Default: true)
    */
    'createChannelOptionsDistinct'?: string;
    /**
    * Specifies the time to start the announcement, in [Unix milliseconds](/docs/chat/v3/platform-api/guides/miscellaneous#2-timestamps) format. If not specified, the default is the timestamp of when the request was delivered to Sendbird server. (Default: current timestamp)
    */
    'scheduledAt'?: number;
    /**
    * Specifies the time to temporarily put the announcement on hold in UTC. The string is represented in HHMM format. This should be specified in conjunction with the resume_at property.<br/><br/> If both the cease_at and resume_at are not specified, Sendbird server starts to send the announcement at the time of the scheduled_at above.
    */
    'ceaseAt'?: string;
    /**
    * Specifies the time to automatically resume the on-hold announcement in UTC. The string is represented in HHMM format. This should be specified in conjunction with the cease_at property above.<br/><br/> If both the cease_at and resume_at are not specified, Sendbird server starts to send the announcement at the time of the scheduled_at above.
    */
    'resumeAt'?: string;
    /**
    * Specifies the time to permanently end the announcement, in [Unix milliseconds](/docs/chat/v3/platform-api/guides/miscellaneous##2-timestamps) format. If this property is specified, the announcement ends even when the announcement is not sent to all its targets. <br/><br/> For the announcement to run safely, the end_at time should be set at least 10 minutes later than the scheduled_at time.
    */
    'endAt'?: number;
    /**
    * Determines whether to turn on push notification for the announcement. If set to true, push notifications will be sent for the announcement. (Default: true)
    */
    'enablePush'?: boolean;
    /**
    * Determines whether to assign an announcement sender as an inviter of the newly created channels. (Default: false)
    */
    'assignSenderAsChannelInviter'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageType",
            "baseName": "message.type",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageUserId",
            "baseName": "message.user_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageContent",
            "baseName": "message.content",
            "type": "string",
            "format": ""
        },
        {
            "name": "targetAt",
            "baseName": "target_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "targetList",
            "baseName": "target_list",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "targetChannelType",
            "baseName": "target_channel_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "uniqueId",
            "baseName": "unique_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageCustomType",
            "baseName": "message.custom_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageData",
            "baseName": "message.data",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannel",
            "baseName": "create_channel",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "announcementGroup",
            "baseName": "announcement_group",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannelOptions",
            "baseName": "create_channel_options",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannelOptionsName",
            "baseName": "create_channel_options.name",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannelOptionsCoverUrl",
            "baseName": "create_channel_options.cover_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannelOptionsCustomType",
            "baseName": "create_channel_options.custom_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannelOptionsData",
            "baseName": "create_channel_options.data",
            "type": "string",
            "format": ""
        },
        {
            "name": "createChannelOptionsDistinct",
            "baseName": "create_channel_options.distinct",
            "type": "string",
            "format": ""
        },
        {
            "name": "scheduledAt",
            "baseName": "scheduled_at",
            "type": "number",
            "format": ""
        },
        {
            "name": "ceaseAt",
            "baseName": "cease_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "resumeAt",
            "baseName": "resume_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "endAt",
            "baseName": "end_at",
            "type": "number",
            "format": ""
        },
        {
            "name": "enablePush",
            "baseName": "enable_push",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "assignSenderAsChannelInviter",
            "baseName": "assign_sender_as_channel_inviter",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ScheduleAnnouncementData.attributeTypeMap;
    }

    public constructor() {
    }
}

