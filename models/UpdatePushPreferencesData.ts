/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class UpdatePushPreferencesData {
    /**
    * Determines the type of push notification trigger to apply to the user's joined group channels. Valid values are the following:<br />- all (default): when disconnected from Sendbird server, the user receives notifications for all new messages including mentioned messages the user has been mentioned in.<br />- mention_only: when disconnected from Sendbird server, the user only receives notifications for messages the user has been mentioned in.<br />- off: the user doesn't receive any notifications.
    */
    'pushTriggerOption': string;
    /**
    * Determines whether to pause notification messages for the user during a specific time of day. (Default: false)
    */
    'doNotDisturb': boolean;
    /**
    * Specifies the hour to start pausing the notifications for Do Not Disturb of the user.
    */
    'startHour': number;
    /**
    * Specifies the minute of the hour to start pausing the notifications for Do Not Disturb of the user.
    */
    'startMin': number;
    /**
    * Specifies the hour to stop pausing the notifications for Do Not Disturb of the user.
    */
    'endHour': number;
    /**
    * Specifies the minute of the hour to stop pausing the notifications for Do Not Disturb of the user.
    */
    'endMin': number;
    /**
    * Determines whether to snooze notification messages for the user during a specific period of time. (Default: false)
    */
    'snoozeEnabled': boolean;
    /**
    * Specifies the timestamp of when to start snoozing the notifications, in [Unix milliseconds](/docs/chat/v3/platform-api/guides/miscellaneous#2-timestamps).
    */
    'snoozeStartTs': number;
    /**
    * Specifies the timestamp of when to end snoozing the notifications, in [Unix milliseconds](/docs/chat/v3/platform-api/guides/miscellaneous#2-timestamps).
    */
    'snoozeEndTs': number;
    /**
    * Determines whether to block push notifications from [all bots](/docs/chat/v3/platform-api/guides/bot-interface#2-list-bots) within the application. If the push_blocked_bot_ids is specified, notifications only from the bots in the property are blocked. (Default: false)
    */
    'blockPushFromBots': boolean;
    /**
    * Specifies an array of one or more IDs of bots whose push notifications are blocked. This property is effective only when the block_push_from_bots is set to true.
    */
    'pushBlockedBotIds': Array<number>;
    /**
    * Specifies the timezone to be applied to push preferences with a value such as UTC, Asia/Seoul, Europe/London, etc.
    */
    'timezone': string;
    /**
    * Specifies the name of a sound file to be played when a push notification is delivered to your client app.
    */
    'pushSound': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pushTriggerOption",
            "baseName": "push_trigger_option",
            "type": "string",
            "format": ""
        },
        {
            "name": "doNotDisturb",
            "baseName": "do_not_disturb",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "startHour",
            "baseName": "start_hour",
            "type": "number",
            "format": ""
        },
        {
            "name": "startMin",
            "baseName": "start_min",
            "type": "number",
            "format": ""
        },
        {
            "name": "endHour",
            "baseName": "end_hour",
            "type": "number",
            "format": ""
        },
        {
            "name": "endMin",
            "baseName": "end_min",
            "type": "number",
            "format": ""
        },
        {
            "name": "snoozeEnabled",
            "baseName": "snooze_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "snoozeStartTs",
            "baseName": "snooze_start_ts",
            "type": "number",
            "format": ""
        },
        {
            "name": "snoozeEndTs",
            "baseName": "snooze_end_ts",
            "type": "number",
            "format": ""
        },
        {
            "name": "blockPushFromBots",
            "baseName": "block_push_from_bots",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "pushBlockedBotIds",
            "baseName": "push_blocked_bot_ids",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "timezone",
            "baseName": "timezone",
            "type": "string",
            "format": ""
        },
        {
            "name": "pushSound",
            "baseName": "push_sound",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UpdatePushPreferencesData.attributeTypeMap;
    }

    public constructor() {
    }
}

