/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ModelObject } from './ModelObject';
import { SendBirdAdminMessage } from './SendBirdAdminMessage';
import { SendBirdAppleCriticalAlertOptions } from './SendBirdAppleCriticalAlertOptions';
import { SendBirdFileMessage } from './SendBirdFileMessage';
import { SendBirdMessageMetaArray } from './SendBirdMessageMetaArray';
import { SendBirdOGMetaData } from './SendBirdOGMetaData';
import { SendBirdPlugin } from './SendBirdPlugin';
import { SendBirdReaction } from './SendBirdReaction';
import { SendBirdSender } from './SendBirdSender';
import { SendBirdThreadInfo } from './SendBirdThreadInfo';
import { SendBirdUser } from './SendBirdUser';
import { SendBirdUserMessageParams } from './SendBirdUserMessageParams';
import { HttpFile } from '../http/http';

export class SendBirdUserMessage {
    'appleCriticalAlertOptions'?: SendBirdAppleCriticalAlertOptions;
    'channelType'?: string;
    'channelUrl'?: string;
    'createdAt'?: number;
    'customType'?: string;
    'data'?: string;
    'errorCode'?: number;
    'isReplyToChannel'?: boolean;
    'mentionType'?: string;
    'mentionedUsers'?: Array<SendBirdUser>;
    'message'?: string;
    'messageId'?: number;
    'messageParams'?: SendBirdUserMessageParams;
    'messageSurvivalSeconds'?: number;
    'messageType'?: SendBirdUserMessageMessageTypeEnum;
    'metaArray'?: ModelObject;
    'metaArrays'?: Array<SendBirdMessageMetaArray>;
    'ogMetaData'?: SendBirdOGMetaData;
    'parentMessage'?: SendBirdAdminMessage | SendBirdUserMessage | SendBirdFileMessage;
    'parentMessageId'?: number;
    'parentMessageText'?: string;
    'plugins'?: Array<SendBirdPlugin>;
    'reactions'?: Array<SendBirdReaction>;
    'reqId'?: string;
    'requestState'?: SendBirdUserMessageRequestStateEnum;
    'requestedMentionUserIds'?: Array<string>;
    'sender'?: SendBirdSender;
    'sendingStatus'?: SendBirdUserMessageSendingStatusEnum;
    'silent'?: boolean;
    'threadInfo'?: SendBirdThreadInfo;
    'translations'?: ModelObject;
    'updatedAt'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "appleCriticalAlertOptions",
            "baseName": "appleCriticalAlertOptions",
            "type": "SendBirdAppleCriticalAlertOptions",
            "format": ""
        },
        {
            "name": "channelType",
            "baseName": "channelType",
            "type": "string",
            "format": ""
        },
        {
            "name": "channelUrl",
            "baseName": "channelUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "number",
            "format": ""
        },
        {
            "name": "customType",
            "baseName": "customType",
            "type": "string",
            "format": ""
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "string",
            "format": ""
        },
        {
            "name": "errorCode",
            "baseName": "errorCode",
            "type": "number",
            "format": ""
        },
        {
            "name": "isReplyToChannel",
            "baseName": "isReplyToChannel",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "mentionType",
            "baseName": "mentionType",
            "type": "string",
            "format": ""
        },
        {
            "name": "mentionedUsers",
            "baseName": "mentionedUsers",
            "type": "Array<SendBirdUser>",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageId",
            "baseName": "messageId",
            "type": "number",
            "format": ""
        },
        {
            "name": "messageParams",
            "baseName": "messageParams",
            "type": "SendBirdUserMessageParams",
            "format": ""
        },
        {
            "name": "messageSurvivalSeconds",
            "baseName": "messageSurvivalSeconds",
            "type": "number",
            "format": ""
        },
        {
            "name": "messageType",
            "baseName": "messageType",
            "type": "SendBirdUserMessageMessageTypeEnum",
            "format": ""
        },
        {
            "name": "metaArray",
            "baseName": "metaArray",
            "type": "ModelObject",
            "format": ""
        },
        {
            "name": "metaArrays",
            "baseName": "metaArrays",
            "type": "Array<SendBirdMessageMetaArray>",
            "format": ""
        },
        {
            "name": "ogMetaData",
            "baseName": "ogMetaData",
            "type": "SendBirdOGMetaData",
            "format": ""
        },
        {
            "name": "parentMessage",
            "baseName": "parentMessage",
            "type": "SendBirdAdminMessage | SendBirdUserMessage | SendBirdFileMessage",
            "format": ""
        },
        {
            "name": "parentMessageId",
            "baseName": "parentMessageId",
            "type": "number",
            "format": ""
        },
        {
            "name": "parentMessageText",
            "baseName": "parentMessageText",
            "type": "string",
            "format": ""
        },
        {
            "name": "plugins",
            "baseName": "plugins",
            "type": "Array<SendBirdPlugin>",
            "format": ""
        },
        {
            "name": "reactions",
            "baseName": "reactions",
            "type": "Array<SendBirdReaction>",
            "format": ""
        },
        {
            "name": "reqId",
            "baseName": "reqId",
            "type": "string",
            "format": ""
        },
        {
            "name": "requestState",
            "baseName": "requestState",
            "type": "SendBirdUserMessageRequestStateEnum",
            "format": ""
        },
        {
            "name": "requestedMentionUserIds",
            "baseName": "requestedMentionUserIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "sender",
            "baseName": "sender",
            "type": "SendBirdSender",
            "format": ""
        },
        {
            "name": "sendingStatus",
            "baseName": "sendingStatus",
            "type": "SendBirdUserMessageSendingStatusEnum",
            "format": ""
        },
        {
            "name": "silent",
            "baseName": "silent",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "threadInfo",
            "baseName": "threadInfo",
            "type": "SendBirdThreadInfo",
            "format": ""
        },
        {
            "name": "translations",
            "baseName": "translations",
            "type": "ModelObject",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SendBirdUserMessage.attributeTypeMap;
    }

    public constructor() {
    }
}


export type SendBirdUserMessageMessageTypeEnum = "user" ;
export type SendBirdUserMessageRequestStateEnum = "failed" | "none" | "pending" | "succeeded" ;
export type SendBirdUserMessageSendingStatusEnum = "canceled" | "failed" | "none" | "pending" | "succeeded" ;

