import { SendBirdGroupChannelChannel } from './SendBirdGroupChannelChannel';
import { SendBirdGroupChannelCreatedBy } from './SendBirdGroupChannelCreatedBy';
import { SendBirdGroupChannelDisappearingMessage } from './SendBirdGroupChannelDisappearingMessage';
import { SendBirdGroupChannelSmsFallback } from './SendBirdGroupChannelSmsFallback';
import { SendBirdMember } from './SendBirdMember';
import { SendBirdMessageResponse } from './SendBirdMessageResponse';
import { SendBirdUser } from './SendBirdUser';
export declare class SendBirdGroupChannel {
    'channelUrl'?: string;
    'coverUrl'?: string;
    'createdAt'?: number;
    'createdBy'?: SendBirdGroupChannelCreatedBy;
    'creator'?: SendBirdUser;
    'customType'?: string;
    'data'?: string;
    'disappearingMessage'?: SendBirdGroupChannelDisappearingMessage;
    'freeze'?: boolean;
    'ignoreProfanityFilter'?: boolean;
    'hiddenState'?: SendBirdGroupChannelHiddenStateEnum;
    'invitedAt'?: number;
    'inviter'?: SendBirdUser;
    'isAccessCodeRequired'?: boolean;
    'isBroadcast'?: boolean;
    'isCreated'?: boolean;
    'isDiscoverable'?: boolean;
    'isDistinct'?: boolean;
    'isEphemeral'?: boolean;
    'isHidden'?: boolean;
    'isPublic'?: boolean;
    'isPushEnabled'?: boolean;
    'isSuper'?: boolean;
    'joinedAt'?: number;
    'joinedMemberCount'?: number;
    'lastMessage'?: SendBirdMessageResponse;
    'maxLengthMessage'?: number;
    'memberCount'?: number;
    'members'?: Array<SendBirdMember>;
    'messageOffsetTimestamp'?: number;
    'messageSurvivalSeconds'?: number;
    'myCountPreference'?: string;
    'myLastRead'?: number;
    'myMemberState'?: SendBirdGroupChannelMyMemberStateEnum;
    'myMutedState'?: SendBirdGroupChannelMyMutedStateEnum;
    'myPushTriggerOption'?: SendBirdGroupChannelMyPushTriggerOptionEnum;
    'myRole'?: SendBirdGroupChannelMyRoleEnum;
    'name'?: string;
    'operators'?: Array<any>;
    'smsFallback'?: SendBirdGroupChannelSmsFallback;
    'unreadMentionCount'?: number;
    'unreadMessageCount'?: number;
    'channel'?: SendBirdGroupChannelChannel;
    'readReceipt'?: {
        [key: string]: number;
    };
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare type SendBirdGroupChannelHiddenStateEnum = "hidden_allow_auto_unhide" | "hidden_prevent_auto_unhide" | "unhidden";
export declare type SendBirdGroupChannelMyMemberStateEnum = "invited" | "joined" | "none";
export declare type SendBirdGroupChannelMyMutedStateEnum = "muted" | "unmuted";
export declare type SendBirdGroupChannelMyPushTriggerOptionEnum = "all" | "default" | "mention_only" | "false";
export declare type SendBirdGroupChannelMyRoleEnum = "" | "none" | "operator";
